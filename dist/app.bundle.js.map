{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/style.js","webpack:///./src/keyboard/renderKeyboard.js","webpack:///./src/keyboard/key/key.js","webpack:///./src/keyboard/allButtonsArray.js","webpack:///./src/keyboard/keyboardState.js","webpack:///./src/keyboard/onClickKey.js","webpack:///./src/keyboard/onKeyPhys.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","addStyles","style","document","createElement","innerHTML","head","appendChild","renderKeyboard","param","arr","root","getElementById","forEach","el","id","ru","renderKeyRu","en","renderKeyEn","ruShift","renderKeyRuShift","enShift","renderKeyEnShift","allButtonsArray","code","keyboardBaseState","language","uppercase","keyboardType","this","changeLanguage","changeUppercase","renderState","where","saveKeyboardType","pressedKeysId","querySelectorAll","push","keyId","classList","add","localStorage","setItem","loadKeyboardType","getItem","changeStylePressed","contains","remove","onClickKey","addEventListener","event","target","isEnter","isBackspace","isTab","isSpace","isWin","arrow","length","setTimeout","innerText","textarea","slice","isShiftRightPressed","isControlLeftPressed","isControlRightPressed","isShiftLeftPressed","isRightAltPressed","isLeftAltPressed","notSimpleKey","clickKeyEmulate","e","find","colorKeyAnim","activeElement","printSimpleKey","body","console","log"],"mappings":"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CNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,SACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,SACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,SACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,SACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,SACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,QACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,QACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,YACJU,KAAM,YACNT,GAAI,YACJE,GAAI,YACJE,QAAS,YACTE,QAAS,aACR,CACDP,GAAI,MACJU,KAAM,MACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,cACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,eACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,YACNT,GAAI,OACJE,GAAI,OACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,WACJU,KAAM,WACNT,GAAI,WACJE,GAAI,WACJE,QAAS,WACTE,QAAS,YACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,YACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,QACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,QACR,CACDP,GAAI,QACJU,KAAM,QACNT,GAAI,QACJE,GAAI,QACJE,QAAS,QACTE,QAAS,SACR,CACDP,GAAI,YACJU,KAAM,YACNT,GAAI,QACJE,GAAI,QACJE,QAAS,QACTE,QAAS,SACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,OACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,QACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,SACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,IACJU,KAAM,QACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,KACJU,KAAM,UACNT,GAAI,IACJE,GAAI,IACJE,QAAS,IACTE,QAAS,KACR,CACDP,GAAI,aACJU,KAAM,aACNT,GAAI,QACJE,GAAI,QACJE,QAAS,QACTE,QAAS,SACR,CACDP,GAAI,cACJU,KAAM,cACNT,GAAI,OACJE,GAAI,OACJE,QAAS,OACTE,QAAS,QACR,CACDP,GAAI,MACJU,KAAM,MACNT,GAAI,MACJE,GAAI,MACJE,QAAS,MACTE,QAAS,OACR,CAC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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function addStyles() {\n  const style = document.createElement('style');\n  style.innerHTML = `\n\n  body {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding-top: 100px;\n    transition: all 0.5s;\n  }\n\n  * {\n    transition: all 0.5s;\n  }\n\n  .input--field {\n    width:700px;\n  }\n\n  .textarea {\n    width: 99%;\n    height: 250px;\n    background: black;\n    color:white;\n    font-size: 20pt;\n  }\n\n  .keyboard {\n    display: flex;\n    width: 700px;\n    flex-wrap:wrap;\n    justify-content:space-between;\n    background:darkgrey;\n  }\n\n  .key {\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    background: black;\n    color:white;\n    height: 30px;\n    margin: 2px;\n    min-width:41px;\n    border-radius:3px;\n  }\n\n  .enter {\n    min-width: 90px;\n  }\n\n  .shift {\n    min-width:100px;\n  }\n  .space {\n    min-width:310px;\n  }\n\n  .ShiftLeft {\n    min-width: 115px;\n  }\n\n  .pressed {\n    background: orange;\n  }\n  @keyframes onpress {\n  from {\n    background:orange;\n  }\n\n  to {\n    background:black;\n  }\n}\n\n\n  `;\n\n  document.head.appendChild(style);\n}\n\nexport default addStyles;\n","import {\n  renderKeyRu,\n  renderKeyEn,\n  renderKeyRuShift,\n  renderKeyEnShift,\n} from './key/key';\n\n// какую клаву будем рисовать, массив с клавишами, куда\nfunction renderKeyboard(param, arr, root) {\n  if (param === 'ru') {\n    document.getElementById(root).innerHTML = '';\n    arr.forEach((el) => {\n      renderKeyRu(el, root);\n    });\n  }\n  if (param === 'en') {\n    document.getElementById(root).innerHTML = '';\n    arr.forEach((el) => {\n      renderKeyEn(el, root);\n    });\n  }\n  if (param === 'ruShift') {\n    document.getElementById(root).innerHTML = '';\n    arr.forEach((el) => {\n      renderKeyRuShift(el, root);\n    });\n  }\n  if (param === 'enShift') {\n    document.getElementById(root).innerHTML = '';\n    arr.forEach((el) => {\n      renderKeyEnShift(el, root);\n    });\n  }\n}\n\nexport default renderKeyboard;\n","function renderKeyRu(key, root) {\n  document.getElementById(root).innerHTML += `<div class=\"${key.id} key\" id=${key.id}>${key.ru}</div>`;\n}\n\nfunction renderKeyEn(key, root) {\n  document.getElementById(root).innerHTML += `<div class=\"${key.id} key\" id=\"${key.id}\">${key.en}</div>`;\n}\n\nfunction renderKeyRuShift(key, root) {\n  document.getElementById(root).innerHTML += `<div class=\"${key.id} key\" id=\"${key.id}\">${key.ruShift}</div>`;\n}\n\nfunction renderKeyEnShift(key, root) {\n  document.getElementById(root).innerHTML += `<div class=\"${key.id} key\" id=\"${key.id}\">${key.enShift}</div>`;\n}\n\nexport {\n  renderKeyRu,\n  renderKeyEn,\n  renderKeyRuShift,\n  renderKeyEnShift,\n};\n","const allButtonsArray = [{\n  id: '`',\n  code: 'Backquote',\n  ru: 'ё',\n  en: '`',\n  ruShift: 'Ё',\n  enShift: '~',\n}, {\n  id: '1',\n  code: 'Digit1',\n  ru: '1',\n  en: '1',\n  ruShift: '!',\n  enShift: '!',\n}, {\n  id: '2',\n  code: 'Digit2',\n  ru: '2',\n  en: '2',\n  ruShift: '&#34',\n  enShift: '@',\n}, {\n  id: '3',\n  code: 'Digit3',\n  ru: '3',\n  en: '3',\n  ruShift: '№',\n  enShift: '#',\n}, {\n  id: '4',\n  code: 'Digit4',\n  ru: '4',\n  en: '4',\n  ruShift: ';',\n  enShift: '$',\n}, {\n  id: '5',\n  code: 'Digit5',\n  ru: '5',\n  en: '5',\n  ruShift: '%',\n  enShift: '%',\n}, {\n  id: '6',\n  code: 'Digit6',\n  ru: '6',\n  en: '6',\n  ruShift: ':',\n  enShift: '^',\n}, {\n  id: '7',\n  code: 'Digit7',\n  ru: '7',\n  en: '7',\n  ruShift: '?',\n  enShift: '&',\n}, {\n  id: '8',\n  code: 'Digit8',\n  ru: '8',\n  en: '8',\n  ruShift: '*',\n  enShift: '*',\n}, {\n  id: '9',\n  code: 'Digit9',\n  ru: '9',\n  en: '9',\n  ruShift: '(',\n  enShift: '(',\n}, {\n  id: '0',\n  code: 'Digit0',\n  ru: '0',\n  en: '0',\n  ruShift: ')',\n  enShift: ')',\n}, {\n  id: '-',\n  code: 'Minus',\n  ru: '-',\n  en: '-',\n  ruShift: '_',\n  enShift: '_',\n}, {\n  id: '=',\n  code: 'Equal',\n  ru: '=',\n  en: '=',\n  ruShift: '+',\n  enShift: '+',\n}, {\n  id: 'Backspace',\n  code: 'Backspace',\n  ru: 'backspace',\n  en: 'backspace',\n  ruShift: 'backspace',\n  enShift: 'backspace',\n}, {\n  id: 'tab',\n  code: 'Tab',\n  ru: '↹',\n  en: '↹',\n  ruShift: '↹',\n  enShift: '↹',\n}, {\n  id: 'q',\n  code: 'KeyQ',\n  ru: 'й',\n  en: 'q',\n  ruShift: 'Й',\n  enShift: 'Q',\n}, {\n  id: 'w',\n  code: 'KeyW',\n  ru: 'ц',\n  en: 'w',\n  ruShift: 'Ц',\n  enShift: 'W',\n}, {\n  id: 'e',\n  code: 'KeyE',\n  ru: 'у',\n  en: 'e',\n  ruShift: 'У',\n  enShift: 'E',\n}, {\n  id: 'r',\n  code: 'KeyR',\n  ru: 'к',\n  en: 'r',\n  ruShift: 'К',\n  enShift: 'R',\n}, {\n  id: 't',\n  code: 'KeyT',\n  ru: 'е',\n  en: 't',\n  ruShift: 'Е',\n  enShift: 'T',\n}, {\n  id: 'y',\n  code: 'KeyY',\n  ru: 'н',\n  en: 'y',\n  ruShift: 'Н',\n  enShift: 'Y',\n}, {\n  id: 'u',\n  code: 'KeyU',\n  ru: 'г',\n  en: 'u',\n  ruShift: 'Г',\n  enShift: 'U',\n}, {\n  id: 'i',\n  code: 'KeyI',\n  ru: 'ш',\n  en: 'i',\n  ruShift: 'Ш',\n  enShift: 'I',\n}, {\n  id: 'o',\n  code: 'KeyO',\n  ru: 'щ',\n  en: 'o',\n  ruShift: 'Щ',\n  enShift: 'O',\n}, {\n  id: 'p',\n  code: 'KeyP',\n  ru: 'з',\n  en: 'p',\n  ruShift: 'З',\n  enShift: 'P',\n}, {\n  id: '[',\n  code: 'BracketLeft',\n  ru: 'х',\n  en: '[',\n  ruShift: 'Х',\n  enShift: '{',\n}, {\n  id: ']',\n  code: 'BracketRight',\n  ru: 'ъ',\n  en: ']',\n  ruShift: 'Ъ',\n  enShift: '}',\n}, {\n  id: '|',\n  code: 'Backslash',\n  ru: '&#92',\n  en: '&#92',\n  ruShift: '/',\n  enShift: '|',\n}, {\n  id: 'capslock',\n  code: 'CapsLock',\n  ru: 'capslock',\n  en: 'capslock',\n  ruShift: 'capslock',\n  enShift: 'capslock',\n}, {\n  id: 'a',\n  code: 'KeyA',\n  ru: 'ф',\n  en: 'a',\n  ruShift: 'Ф',\n  enShift: 'A',\n}, {\n  id: 's',\n  code: 'KeyS',\n  ru: 'ы',\n  en: 's',\n  ruShift: 'Ы',\n  enShift: 'S',\n}, {\n  id: 'd',\n  code: 'KeyD',\n  ru: 'в',\n  en: 'd',\n  ruShift: 'В',\n  enShift: 'D',\n}, {\n  id: 'f',\n  code: 'KeyF',\n  ru: 'а',\n  en: 'f',\n  ruShift: 'А',\n  enShift: 'F',\n}, {\n  id: 'g',\n  code: 'KeyG',\n  ru: 'п',\n  en: 'g',\n  ruShift: 'П',\n  enShift: 'G',\n}, {\n  id: 'h',\n  code: 'KeyH',\n  ru: 'р',\n  en: 'h',\n  ruShift: 'Р',\n  enShift: 'H',\n}, {\n  id: 'j',\n  code: 'KeyJ',\n  ru: 'о',\n  en: 'j',\n  ruShift: 'О',\n  enShift: 'J',\n}, {\n  id: 'k',\n  code: 'KeyK',\n  ru: 'л',\n  en: 'k',\n  ruShift: 'Л',\n  enShift: 'K',\n}, {\n  id: 'l',\n  code: 'KeyL',\n  ru: 'д',\n  en: 'l',\n  ruShift: 'Д',\n  enShift: 'L',\n}, {\n  id: ';',\n  code: 'Semicolon',\n  ru: 'ж',\n  en: ';',\n  ruShift: 'Ж',\n  enShift: ':',\n}, {\n  id: \"'\",\n  code: 'Quote',\n  ru: 'э',\n  en: \"'\",\n  ruShift: 'Э',\n  enShift: '&#34',\n}, {\n  id: 'enter',\n  code: 'Enter',\n  ru: 'enter',\n  en: 'enter',\n  ruShift: 'enter',\n  enShift: 'enter',\n}, {\n  id: 'ShiftLeft',\n  code: 'ShiftLeft',\n  ru: 'shift',\n  en: 'shift',\n  ruShift: 'shift',\n  enShift: 'shift',\n}, {\n  id: 'z',\n  code: 'KeyZ',\n  ru: 'я',\n  en: 'z',\n  ruShift: 'Я',\n  enShift: 'Z',\n}, {\n  id: 'x',\n  code: 'KeyX',\n  ru: 'ч',\n  en: 'x',\n  ruShift: 'Ч',\n  enShift: 'X',\n}, {\n  id: 'c',\n  code: 'KeyC',\n  ru: 'с',\n  en: 'c',\n  ruShift: 'С',\n  enShift: 'C',\n}, {\n  id: 'v',\n  code: 'KeyV',\n  ru: 'м',\n  en: 'v',\n  ruShift: 'М',\n  enShift: 'V',\n}, {\n  id: 'b',\n  code: 'KeyB',\n  ru: 'и',\n  en: 'b',\n  ruShift: 'И',\n  enShift: 'B',\n}, {\n  id: 'n',\n  code: 'KeyN',\n  ru: 'т',\n  en: 'n',\n  ruShift: 'Т',\n  enShift: 'N',\n}, {\n  id: 'm',\n  code: 'KeyM',\n  ru: 'ь',\n  en: 'm',\n  ruShift: 'Ь',\n  enShift: 'M',\n}, {\n  id: ',',\n  code: 'Comma',\n  ru: 'б',\n  en: ',',\n  ruShift: 'Б',\n  enShift: '<',\n}, {\n  id: '.',\n  code: 'Period',\n  ru: 'ю',\n  en: '.',\n  ruShift: 'Ю',\n  enShift: '>',\n}, {\n  id: '/',\n  code: 'Slash',\n  ru: '.',\n  en: '/',\n  ruShift: ',',\n  enShift: '?',\n}, {\n  id: '↑ ',\n  code: 'ArrowUp',\n  ru: '↑',\n  en: '↑',\n  ruShift: '↑',\n  enShift: '↑',\n}, {\n  id: 'ShiftRight',\n  code: 'ShiftRight',\n  ru: 'shift',\n  en: 'shift',\n  ruShift: 'shift',\n  enShift: 'shift',\n}, {\n  id: 'ControlLeft',\n  code: 'ControlLeft',\n  ru: 'ctrl',\n  en: 'ctrl',\n  ruShift: 'ctrl',\n  enShift: 'ctrl',\n}, {\n  id: 'win',\n  code: 'win',\n  ru: 'win',\n  en: 'win',\n  ruShift: 'win',\n  enShift: 'win',\n}, {\n  id: 'leftAlt',\n  code: 'AltLeft',\n  ru: 'alt',\n  en: 'alt',\n  ruShift: 'alt',\n  enShift: 'alt',\n}, {\n  id: 'space',\n  code: 'Space',\n  ru: 'space',\n  en: 'space',\n  ruShift: 'space',\n  enShift: 'space',\n}, {\n  id: 'rightAlt',\n  code: 'AltRight',\n  ru: 'alt',\n  en: 'alt',\n  ruShift: 'alt',\n  enShift: 'alt',\n}, {\n  id: 'ControlRight',\n  code: 'ControlRight',\n  ru: 'ctrl',\n  en: 'ctrl',\n  ruShift: 'ctrl',\n  enShift: 'ctrl',\n}, {\n  id: '← ',\n  code: 'ArrowLeft',\n  ru: '←',\n  en: '←',\n  ruShift: '←',\n  enShift: '←',\n}, {\n  id: '↓ ',\n  code: 'ArrowDown',\n  ru: '↓',\n  en: '↓',\n  ruShift: '↓',\n  enShift: '↓',\n}, {\n  id: '→ ',\n  code: 'ArrowRight',\n  ru: '→',\n  en: '→',\n  ruShift: '→',\n  enShift: '→',\n}];\n\n\nexport default allButtonsArray;\n","import renderKeyboard from './renderKeyboard';\nimport allButtonsArray from './allButtonsArray';\n\n\nconst keyboardBaseState = {\n  language: 'en',\n  uppercase: false,\n\n  keyboardType() {\n    return `${this.language}${((this.uppercase === true || this.uppercase === 'true') ? 'Shift' : '')}`;\n  },\n\n  changeLanguage() {\n    if (this.language === 'en') {\n      this.language = 'ru';\n    } else {\n      this.language = 'en';\n    }\n  },\n\n  changeUppercase() {\n    if (this.uppercase === true || this.uppercase === 'true') {\n      this.uppercase = false;\n    } else {\n      this.uppercase = true;\n    }\n  },\n\n  renderState(where) {\n    document.getElementById(where).innerHTML = `\n    <div class=\"keyboardState\" id=\"keyboardState\">\n    language:${keyboardBaseState.language}, uppercase: ${keyboardBaseState.uppercase}.<br>\n    Переключение -- ctrl + shift<br>\n    Специально сбрасываю alt, shift, ctrl, ибо не логично начинать с нажатыми\n    Клавиатура сохранит язык ввода (независимо от языка установленного в ОС)<br>\n    Клавиатура сохранит регистр при перезагрузке (для удобства CapsLock оставляю подсвеченным)<br></div>`;\n    this.saveKeyboardType();\n  },\n\n  // запомним какие были нажаты, перересуем клаву, сделаем нажатыми те, что были\n  renderKeyboard(keyboardType = this.keyboardType()) {\n    const pressedKeysId = [];\n    document.querySelectorAll('.pressed').forEach((el) => pressedKeysId.push(el.id));\n    renderKeyboard(keyboardType, allButtonsArray, 'keyboard');\n    pressedKeysId.forEach((keyId) => {\n      document.getElementById(keyId).classList.add('pressed');\n    });\n  },\n\n  saveKeyboardType() {\n    localStorage.setItem('language', this.language);\n    localStorage.setItem('uppercase', this.uppercase);\n  },\n\n  loadKeyboardType() {\n    this.language = localStorage.getItem('language') ? localStorage.getItem('language') : this.language;\n    this.uppercase = (localStorage.getItem('uppercase')) ? localStorage.getItem('uppercase') : this.uppercase;\n    renderKeyboard(this.keyboardType(), allButtonsArray, 'keyboard');\n    if (this.uppercase === 'true') document.getElementById('capslock').classList.add('pressed');\n  },\n};\n\n\nexport default keyboardBaseState;\n","import keyboardBaseState from './keyboardState';\n\nfunction colorKeyAnim() {\n  document.getElementById('keyboard').addEventListener('click', (event) => {\n    const {\n      id,\n      classList,\n    } = event.target;\n    const isEnter = (id === 'enter');\n    const isBackspace = (id === 'Backspace');\n    const isTab = (id === 'tab');\n    const isSpace = (id === 'space');\n    const isWin = (id === 'win');\n    const arrow = (id === '↑ ' || id === '← ' || id === '↓ ' || id === '→ ');\n    if (id.length === 1 || isEnter || isBackspace || isTab || isSpace || isWin || arrow) {\n      classList.add('pressed');\n      setTimeout(() => {\n        classList.remove('pressed');\n      }, 500);\n    }\n  });\n}\n\nfunction printSimpleKey() {\n  document.getElementById('keyboard').addEventListener('click', (event) => {\n    if (event.target.id.length === 1) {\n      document.getElementById('textarea').value += event.target.innerText;\n    }\n  });\n}\n\nfunction changeStylePressed(id) {\n  const key = document.getElementById(id);\n  if (key.classList.contains('pressed')) {\n    key.classList.remove('pressed');\n  } else {\n    key.classList.add('pressed');\n  }\n}\n\nfunction changeUppercase() {\n  keyboardBaseState.changeUppercase();\n  keyboardBaseState.renderState('keyboardState');\n}\n\nfunction changeLanguage() {\n  keyboardBaseState.changeLanguage();\n  keyboardBaseState.renderState('keyboardState');\n}\n\nfunction notSimpleKey() {\n  const textarea = document.getElementById('textarea');\n  document.getElementById('keyboard').addEventListener('click', (event) => {\n    const {\n      id,\n    } = event.target;\n    if (id === 'space') {\n      textarea.value += ' ';\n    }\n    if (id === 'enter') {\n      textarea.value += '\\n';\n    }\n    if (id === 'Backspace') {\n      textarea.value = textarea.value.slice(0, textarea.value.length - 1);\n    }\n    if (id === 'tab') {\n      textarea.value += '\\t';\n    }\n    if (id === 'win') {\n      textarea.value += 'Что должно произойти?';\n    }\n    if (id === 'capslock') {\n      changeStylePressed(id);\n      changeUppercase();\n      keyboardBaseState.renderKeyboard();\n    }\n    if (id === 'ShiftLeft') {\n      const isShiftRightPressed = document.getElementById('ShiftRight').classList.contains('pressed');\n      const isControlLeftPressed = document.getElementById('ControlLeft').classList.contains('pressed');\n      const isControlRightPressed = document.getElementById('ControlRight').classList.contains('pressed');\n      changeStylePressed(id);\n      if (isShiftRightPressed) {\n        changeStylePressed('ShiftRight');\n        return;\n      }\n      if (isControlLeftPressed) {\n        changeLanguage();\n        changeStylePressed(id);\n        changeStylePressed('ControlLeft');\n        keyboardBaseState.renderKeyboard();\n        return;\n      }\n      if (isControlRightPressed) {\n        changeLanguage();\n        changeStylePressed(id);\n        changeStylePressed('ControlRight');\n        keyboardBaseState.renderKeyboard();\n        return;\n      }\n      // если ничего другие shifts and contrls не нажаты\n      changeUppercase();\n      keyboardBaseState.renderKeyboard();\n    }\n    if (id === 'ShiftRight') {\n      const isShiftLeftPressed = document.getElementById('ShiftLeft').classList.contains('pressed');\n      const isControlLeftPressed = document.getElementById('ControlLeft').classList.contains('pressed');\n      const isControlRightPressed = document.getElementById('ControlRight').classList.contains('pressed');\n      changeStylePressed(id);\n      if (isShiftLeftPressed) {\n        changeStylePressed('ShiftLeft');\n        return;\n      }\n      if (isControlLeftPressed) {\n        changeLanguage();\n        changeStylePressed(id);\n        changeStylePressed('ControlLeft');\n        keyboardBaseState.renderKeyboard();\n        return;\n      }\n      if (isControlRightPressed) {\n        changeLanguage();\n        changeStylePressed(id);\n        changeStylePressed('ControlRight');\n        keyboardBaseState.renderKeyboard();\n        return;\n      }\n      // если никакие другие shifts and contrls не нажаты\n      changeUppercase();\n      keyboardBaseState.renderKeyboard();\n    }\n    if (id === 'ControlLeft') {\n      const isControlRightPressed = document.getElementById('ControlRight').classList.contains('pressed');\n      const isShiftLeftPressed = document.getElementById('ShiftLeft').classList.contains('pressed');\n      const isShiftRightPressed = document.getElementById('ShiftRight').classList.contains('pressed');\n      changeStylePressed(id);\n      if (isControlRightPressed) {\n        changeStylePressed('ControlRight');\n      }\n      if (isShiftLeftPressed) {\n        changeLanguage();\n        changeUppercase();\n        changeStylePressed(id);\n        changeStylePressed('ShiftLeft');\n        keyboardBaseState.renderKeyboard();\n      }\n      if (isShiftRightPressed) {\n        changeLanguage();\n        changeUppercase();\n        changeStylePressed(id);\n        changeStylePressed('ShiftRight');\n        keyboardBaseState.renderKeyboard();\n      }\n    }\n    if (id === 'ControlRight') {\n      const isControlLeftPressed = document.getElementById('ControlLeft').classList.contains('pressed');\n      const isShiftLeftPressed = document.getElementById('ShiftLeft').classList.contains('pressed');\n      const isShiftRightPressed = document.getElementById('ShiftRight').classList.contains('pressed');\n      changeStylePressed(id);\n      if (isControlLeftPressed) {\n        changeStylePressed('ControlLeft');\n      }\n      if (isShiftLeftPressed) {\n        changeLanguage();\n        changeLanguage();\n        changeStylePressed(id);\n        changeStylePressed('ShiftLeft');\n        keyboardBaseState.renderKeyboard();\n      }\n      if (isShiftRightPressed) {\n        changeLanguage();\n        changeLanguage();\n        changeStylePressed(id);\n        changeStylePressed('ShiftRight');\n        keyboardBaseState.renderKeyboard();\n      }\n    }\n    if (id === 'leftAlt') {\n      const isRightAltPressed = document.getElementById('rightAlt').classList.contains('pressed');\n      changeStylePressed(id);\n      if (isRightAltPressed) changeStylePressed('rightAlt');\n    }\n    if (id === 'rightAlt') {\n      const isLeftAltPressed = document.getElementById('leftAlt').classList.contains('pressed');\n      changeStylePressed(id);\n      if (isLeftAltPressed) changeStylePressed('lefttAlt');\n    }\n  });\n}\n\nfunction onClickKey() {\n  colorKeyAnim();\n  printSimpleKey();\n  notSimpleKey();\n}\n\nexport default onClickKey;\n","import allButtonsArray from './allButtonsArray';\nimport keyboardBaseState from './keyboardState';\n\nfunction colorKeyAnim(id) {\n  const key = document.getElementById(id);\n  const isEnter = (id === 'enter');\n  const isBackspace = (id === 'Backspace');\n  const isTab = (id === 'tab');\n  const isSpace = (id === 'space');\n  const isWin = (id === 'win');\n  const arrow = (id === '↑ ' || id === '← ' || id === '↓ ' || id === '→ ');\n  if (id.length === 1 || isEnter || isBackspace || isTab || isSpace || isWin || arrow) {\n    key.classList.add('pressed');\n    setTimeout(() => {\n      key.classList.remove('pressed');\n    }, 500);\n  }\n}\n\n\nfunction printSimpleKey(id) {\n  const textarea = document.getElementById('textarea');\n  if (id.length === 1) {\n    textarea.value += document.getElementById(id).innerText;\n  }\n  if (id.length === 1 && document.getElementById('textarea') === document.activeElement) {\n    textarea.value = textarea.value.slice(0, textarea.value.length - 1);\n  }\n}\n\nfunction changeStylePressed(id) {\n  const key = document.getElementById(id);\n  if (key.classList.contains('pressed')) {\n    key.classList.remove('pressed');\n  } else {\n    key.classList.add('pressed');\n  }\n}\n\nfunction changeUppercase() {\n  keyboardBaseState.changeUppercase();\n  keyboardBaseState.renderState('keyboardState');\n}\n\nfunction changeLanguage() {\n  keyboardBaseState.changeLanguage();\n  keyboardBaseState.renderState('keyboardState');\n}\n\nfunction notSimpleKey(id) {\n  const textarea = document.getElementById('textarea');\n  if (id === 'space') {\n    textarea.value += ' ';\n  }\n  if (id === 'enter') {\n    textarea.value += '\\n';\n  }\n  if (id === 'Backspace') {\n    if (document.getElementById('textarea') === document.activeElement) return;\n    textarea.value = textarea.value.slice(0, textarea.value.length - 1);\n  }\n  if (id === 'tab') {\n    textarea.value += '\\t';\n  }\n  if (id === 'win') {\n    textarea.value += 'Что должно произойти?';\n  }\n  if (id === 'capslock') {\n    changeStylePressed(id);\n    changeUppercase();\n    keyboardBaseState.renderKeyboard();\n  }\n  if (id === 'ShiftLeft') {\n    const isShiftRightPressed = document.getElementById('ShiftRight').classList.contains('pressed');\n    const isControlLeftPressed = document.getElementById('ControlLeft').classList.contains('pressed');\n    const isControlRightPressed = document.getElementById('ControlRight').classList.contains('pressed');\n    changeStylePressed(id);\n    if (isShiftRightPressed) {\n      changeStylePressed('ShiftRight');\n      return;\n    }\n    if (isControlLeftPressed) {\n      changeLanguage();\n      changeStylePressed(id);\n      changeStylePressed('ControlLeft');\n      keyboardBaseState.renderKeyboard();\n      return;\n    }\n    if (isControlRightPressed) {\n      changeLanguage();\n      changeStylePressed(id);\n      changeStylePressed('ControlRight');\n      keyboardBaseState.renderKeyboard();\n      return;\n    }\n    // если ничего другие shifts and contrls не нажаты\n    changeUppercase();\n    keyboardBaseState.renderKeyboard();\n  }\n  if (id === 'ShiftRight') {\n    const isShiftLeftPressed = document.getElementById('ShiftLeft').classList.contains('pressed');\n    const isControlLeftPressed = document.getElementById('ControlLeft').classList.contains('pressed');\n    const isControlRightPressed = document.getElementById('ControlRight').classList.contains('pressed');\n    changeStylePressed(id);\n    if (isShiftLeftPressed) {\n      changeStylePressed('ShiftLeft');\n      return;\n    }\n    if (isControlLeftPressed) {\n      changeLanguage();\n      changeStylePressed(id);\n      changeStylePressed('ControlLeft');\n      keyboardBaseState.renderKeyboard();\n      return;\n    }\n    if (isControlRightPressed) {\n      changeLanguage();\n      changeStylePressed(id);\n      changeStylePressed('ControlRight');\n      keyboardBaseState.renderKeyboard();\n      return;\n    }\n    // если никакие другие shifts and contrls не нажаты\n    changeUppercase();\n    keyboardBaseState.renderKeyboard();\n  }\n  if (id === 'ControlLeft') {\n    const isControlRightPressed = document.getElementById('ControlRight').classList.contains('pressed');\n    const isShiftLeftPressed = document.getElementById('ShiftLeft').classList.contains('pressed');\n    const isShiftRightPressed = document.getElementById('ShiftRight').classList.contains('pressed');\n    changeStylePressed(id);\n    if (isControlRightPressed) {\n      changeStylePressed('ControlRight');\n    }\n    if (isShiftLeftPressed) {\n      changeLanguage();\n      changeUppercase();\n      changeStylePressed(id);\n      changeStylePressed('ShiftLeft');\n      keyboardBaseState.renderKeyboard();\n    }\n    if (isShiftRightPressed) {\n      changeLanguage();\n      changeUppercase();\n      changeStylePressed(id);\n      changeStylePressed('ShiftRight');\n      keyboardBaseState.renderKeyboard();\n    }\n  }\n  if (id === 'ControlRight') {\n    const isControlLeftPressed = document.getElementById('ControlLeft').classList.contains('pressed');\n    const isShiftLeftPressed = document.getElementById('ShiftLeft').classList.contains('pressed');\n    const isShiftRightPressed = document.getElementById('ShiftRight').classList.contains('pressed');\n    changeStylePressed(id);\n    if (isControlLeftPressed) {\n      changeStylePressed('ControlLeft');\n    }\n    if (isShiftLeftPressed) {\n      changeLanguage();\n      changeLanguage();\n      changeStylePressed(id);\n      changeStylePressed('ShiftLeft');\n      keyboardBaseState.renderKeyboard();\n    }\n    if (isShiftRightPressed) {\n      changeLanguage();\n      changeLanguage();\n      changeStylePressed(id);\n      changeStylePressed('ShiftRight');\n      keyboardBaseState.renderKeyboard();\n    }\n  }\n  if (id === 'leftAlt') {\n    const isRightAltPressed = document.getElementById('rightAlt').classList.contains('pressed');\n    changeStylePressed(id);\n    if (isRightAltPressed) changeStylePressed('rightAlt');\n  }\n  if (id === 'rightAlt') {\n    const isLeftAltPressed = document.getElementById('leftAlt').classList.contains('pressed');\n    changeStylePressed(id);\n    if (isLeftAltPressed) changeStylePressed('lefttAlt');\n  }\n}\n\n\nfunction clickKeyEmulate() {\n  document.addEventListener('keydown', (e) => {\n    const { id } = allButtonsArray.find((el) => el.code === e.code);\n    colorKeyAnim(id);\n    printSimpleKey(id);\n    notSimpleKey(id);\n  });\n}\n\n\nexport default clickKeyEmulate;\n","import addStyles from './style';\nimport keyboardBaseState from './keyboard/keyboardState';\nimport onClickKey from './keyboard/onClickKey';\nimport clickKeyEmulate from './keyboard/onKeyPhys';\n\n// добавим пару блоков куда будем все рисовать\ndocument.body.innerHTML = `\n  <div id=\"input--field\" class=\"input--field\">\n    <div class=\"keyboardState\" id=\"keyboardState\">language:${keyboardBaseState.language}, uppercase: ${keyboardBaseState.uppercase}. Переключение -- ctrl + shift</div>\n    <textarea class=\"textarea\" id=\"textarea\"></textarea>\n  </div>\n  <div id=\"keyboard\" class=\"keyboard\"></div>\n  ${document.body.innerHTML}`;\n\n// стили нормально не подключились, так пока сделаем\naddStyles();\n\n// загрузим данные, если были сохранены\nkeyboardBaseState.loadKeyboardType();\nconsole.log(keyboardBaseState.keyboardType());\nkeyboardBaseState.renderState('keyboardState');\n// отрисуем нашу клаву\nkeyboardBaseState.renderKeyboard();\n\n// обработаем клики\nonClickKey();\n\n// обработаем нажатия на клавиши\nclickKeyEmulate();\n"],"sourceRoot":""}